{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactapp_3\\\\src\\\\App.jsx\";\nimport React, { createContext } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport Error from \"./Error\";\nimport Menu from \"./Menu\";\nimport Service from \"./Service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: () => {\n          /*#__PURE__*/\n          _jsxDEV(About, {\n            name: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 49\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        exact: true,\n        component: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/service\",\n        exact: true,\n        component: Service\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        component: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = App;\nexport default App; // To Pass Parent data to child component we can use createContext() or contextAPI.\n// useEffect() always expecta function\n// Client Side rendering\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactJS/reactapp_3/src/App.jsx"],"names":["React","createContext","Switch","Route","Link","About","Contact","Error","Menu","Service","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,4BAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAF,eACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAE,MAAM;AAAC;AAAA,kBAAC,KAAD;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAA6B;AAArE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,MAA5B;AAA6B,QAAA,SAAS,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,MAA5B;AAA6B,QAAA,SAAS,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA,kBADF;AAUD,CAXD;;KAAMG,G;AAYN,eAAeA,GAAf,C,CAEA;AACA;AAEA","sourcesContent":["import React, { createContext } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport Error from \"./Error\";\r\nimport Menu from \"./Menu\";\r\nimport Service from \"./Service\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <><Menu></Menu>\r\n      <Switch>\r\n        <Route path='/' exact component={() => {<About name='About'></About>}}></Route>\r\n        <Route path='/contact' exact component={Contact}></Route>\r\n        <Route path='/service' exact component={Service}></Route>\r\n        <Route component={Error}></Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n\r\n// To Pass Parent data to child component we can use createContext() or contextAPI.\r\n// useEffect() always expecta function\r\n\r\n// Client Side rendering\r\n"]},"metadata":{},"sourceType":"module"}